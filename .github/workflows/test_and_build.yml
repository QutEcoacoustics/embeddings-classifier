name: Test and Build

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.11]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      
      - name: Cache pip dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements*.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install numpy pyarrow pytest pytest-cov pytest-mock
      
      - name: Create test directory structure
        run: |
          mkdir -p tests/files/parquet
          mkdir -p tests/files/config
          mkdir -p tests/mounted/input
          mkdir -p tests/mounted/config
          mkdir -p tests/mounted/output
          touch tests/mounted/input/.gitkeep
          touch tests/mounted/config/.gitkeep
          touch tests/mounted/output/.gitkeep
      
      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage.xml
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: false

  build:
    needs: test
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Log in to Docker Hub (optional)
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      
      - name: Build Docker image (development)
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          target: development
          push: false
          tags: parquet-processor:dev
          platforms: linux/amd64
          cache-from: type=gha
          cache-to: type=gha,mode=max
      
      - name: Unit Test in Docker container
        run: |
          docker run --rm -v ${{ github.workspace }}:/app parquet-processor:dev pytest tests/unit/ -v

      - name: Integration Test form host
        run: |
          pytest -m docker tests/docker 
      
      - name: Build production image
        if: github.event_name != 'pull_request'
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          target: production
          push: ${{ github.event_name != 'pull_request' }}
          tags: |
            parquet-processor:latest
            parquet-processor:${{ github.sha }}
          platforms: linux/amd64
          cache-from: type=gha
          cache-to: type=gha,mode=max